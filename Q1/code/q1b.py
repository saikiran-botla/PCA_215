import numpy
import matplotlib.pyplot as plt
import random
import math

numpy.random.seed(23+142)
def point_on_triangle(pt1, pt2, pt3):
    #Random point on the triangle with vertices pt1, pt2 and pt3.
    x, y = random.random(), random.random()
    q = abs(x - y)
    s, t, u = q, 0.5 * (x + y - q), 1 - 0.5 * (q + x + y)
    return numpy.array([
       (s * pt1[0])+ (t * pt2[0]) + (u * pt3[0]),
        (s * pt1[1]) + (t * pt2[1]) + (u * pt3[1])
    ])# method to generate a point inside triangle using weights s,t,u

pt1 = (0, 0)
pt2 = (numpy.pi, 0)
pt3 = (numpy.pi/3, math.exp(1))
# This generates 10000 points in a triangle:
points = [point_on_triangle(pt1, pt2, pt3) for _ in range(10000000)]

#And a plot obtained from the above, demonstrating the uniformity. The plot was generated by this code:
x, y = zip(*points)
plt.hist2d(x, y,bins = 150,range=[[-0.5,4],[-0.5,3]])
#plt.show()
plt.savefig('./results/q1b.png')